services:
  server:
    image: motion/motion-server
    container_name: ${SCOPE:-motion}-server
    restart: unless-stopped
    network_mode: bridge
    volumes:
      - storage:/storage
  nats:
    image: motion/motion-nats
    container_name: ${SCOPE:-motion}-nats
    restart: unless-stopped
    depends_on:
      - server
    network_mode: "service:server"
    volumes:
      - storage:/storage
  rtsp:
    image: motion/motion-rtsp
    container_name: ${SCOPE:-motion}-rtsp
    restart: unless-stopped
    depends_on:
      - server
    network_mode: "service:server"
    volumes:
      - storage:/storage
  minio:
    image: motion/motion-minio
    container_name: ${SCOPE:-motion}-minio
    restart: unless-stopped
    depends_on:
      - server
    network_mode: "service:server"
    volumes:
      - storage:/storage
  react:
    image: motion/motion-react
    container_name: ${SCOPE:-motion}-react
    restart: unless-stopped
    depends_on:
      - server
    network_mode: "service:server"
  work:
    image: motion/motion-work
    container_name: ${SCOPE:-motion}-work
    restart: unless-stopped
    depends_on:
      - server
    network_mode: "service:server"
    volumes:
      - run:/run/motion
      - storage:/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/machine-id:/etc/machine-id:ro
    environment:
      - MOTION=${PWD}
      - SCOPE=${SCOPE}
  live:
    image: motion/motion-live
    container_name: ${SCOPE:-motion}-live
    restart: unless-stopped
    depends_on:
      - server
    network_mode: "service:server"
    volumes:
      - run:/run/motion
      - storage:/storage:ro
    environment:
      - MOTION=${MOTION}
      - SCOPE=${SCOPE}
  model:
    image: motion/motion-model
    container_name: ${SCOPE:-motion}-model
    restart: no
    depends_on:
      - server
    network_mode: "service:server"
    volumes:
      - run:/run/motion
      - storage:/storage:ro
    environment:
      - MOTION=${MOTION}
      - SCOPE=${SCOPE}
  runner:
    image: motion/motion-runner
    container_name: ${SCOPE:-motion}-runner
    restart: no
    depends_on:
      - server
    network_mode: "service:server"
    volumes:
      - run:/run/motion
      - storage:/storage:ro
    environment:
      - MOTION=${MOTION}
      - SCOPE=${SCOPE}
volumes:
  storage: {}
  run: {}
